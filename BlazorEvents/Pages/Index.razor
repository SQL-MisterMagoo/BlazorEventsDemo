@page "/"

<h3>Please don't use EventCallback ALL the time!</h3>

<BlazorEvents.Comps.StatsDisplay />

<BlazorEvents.Comps.WorkLoadToggle/>

<div class="d-flex flex-wrap mt-1 p-1">
    @for (int i = 0; i < buttonCount; i++)
    {
        int local = i;
        if ((local % 2) == 0)
        {
            <BlazorEvents.Comps.ActionDot @bind-Value="@Colour[local]" />
        }
        else
        {
            <BlazorEvents.Comps.CallbackDot @bind-Value="@Colour[local]"/>
        }
    }
</div>
@code
{

    [Inject] BlazorEvents.Comps.StatsState statsState { get; set; }

    int buttonCount = 20;
    int[] Colour;

    protected override void OnInit()
    {
        base.OnInit();
        Colour = Enumerable.Range(1, buttonCount).Select(i => i * 5).ToArray();
    }

    protected override bool ShouldRender()
    {
        statsState?.ShouldRender();
        return base.ShouldRender();
    }

    protected override void OnAfterRender()
    {
        base.OnAfterRender();
        statsState?.DidRender();
    }

}